// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package notifystock

import (
	"context"
	"github.com/uptrace/bun"
)

// Injectors from wire.go:

func InitStockRegister(db *bun.DB, client HTTPClientInterface) *StockRegister {
	financeClient := NewFinanceClient(client)
	stockRepository := NewStockRepository(db)
	symbolRepository := NewSymbolRepository(db)
	stockRegister := NewStockRegister(financeClient, stockRepository, symbolRepository)
	return stockRegister
}

func InitSymbolRepository(db *bun.DB) *SymbolRepository {
	symbolRepository := NewSymbolRepository(db)
	return symbolRepository
}

func InitStockNotifier(ctx context.Context, db *bun.DB, config MailGunClientConfig) (*StockNotifier, error) {
	mailGunClient := NewMailGunClient(config)
	stockRepository := NewStockRepository(db)
	symbolRepository := NewSymbolRepository(db)
	stockNotifier := NewStockNotifier(mailGunClient, stockRepository, symbolRepository)
	return stockNotifier, nil
}

func InitStockRepository(db *bun.DB) *StockRepository {
	stockRepository := NewStockRepository(db)
	return stockRepository
}

func InitNotificationRepository(db *bun.DB) *NotificationRepository {
	notificationRepository := NewNotificationRepository(db)
	return notificationRepository
}
