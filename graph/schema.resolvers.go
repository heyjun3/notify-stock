package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.64

import (
	"context"

	notify "github.com/heyjun3/notify-stock"
	"github.com/heyjun3/notify-stock/graph/model"
)

// Symbol is the resolver for the symbol field.
func (r *queryResolver) Symbol(ctx context.Context, input model.SymbolInput) (*model.Symbol, error) {
	symbol, err := notify.NewSymbol(input.Symbol)
	if err != nil {
		return nil, err
	}
	s, err := symbol.ForDB()
	if err != nil {
		return nil, err
	}
	return &model.Symbol{
		Symbol: s,
	}, nil
}

// CurrentStock is the resolver for the currentStock field.
func (r *symbolResolver) CurrentStock(ctx context.Context, obj *model.Symbol) (*model.Stock, error) {
	return obj.CurrentStock, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// Symbol returns SymbolResolver implementation.
func (r *Resolver) Symbol() SymbolResolver { return &symbolResolver{r} }

type queryResolver struct{ *Resolver }
type symbolResolver struct{ *Resolver }
